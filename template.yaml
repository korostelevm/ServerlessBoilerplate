AWSTemplateFormatVersion: '2010-09-09'
Transform: 'AWS::Serverless-2016-10-31'
Globals:
  Function:
    Environment:
      Variables:
        ServiceTable: !Join [ '', [ 'Service'] ]
        MockTable: !Join [ '', [ 'Mock'] ]
  # Api:
  #   TracingEnabled: True
  #   MethodSettings:
  #     - MetricsEnabled: False
  #       DataTraceEnabled: True
  #       ResourcePath: "/*"
  #       HttpMethod: "*"

Parameters:
  ServiceSubDomainName:
    Type: String
    Default: 'boilerplate'
  RootUrl:
    Type: String
    Default: '{{resolve:ssm:/account/root-url:1}}'
  SslCert: 
    Type: String
    Default: '{{resolve:ssm:/account/ssl-cert:1}}'
  Namespace:
    Type: String
    Default: ''

Resources:
    Builder:
      Type: AWS::Serverless::Application
      Properties:
        Location: ./builder.yaml
    
    CloudFront:
      Type: AWS::Serverless::Application
      Properties:
        Location: ./cloudfront.yaml
        Parameters: 
          ServiceApi: !Ref ServiceApi
          ServiceApiStage: !Ref ServiceApi.Stage


    ServiceApi:
      Type: AWS::Serverless::Api
      Properties:
        DefinitionUri: ./api.yaml
        StageName: Prod
        Variables:
          ServiceApiFunction: !Ref ServiceApiFunction
    
    ServiceApiFunction:
      Type: AWS::Serverless::Function
      Properties:
        CodeUri: ./service
        Handler: index.lambda_handler
        MemorySize: 256
        Runtime: nodejs12.x
        Timeout: 30
        Policies:
          - Statement:
              [{
                  "Effect": "Allow",
                  "Action": ["dynamodb:*","s3:*"],
                  "Resource": "*"
              }]
        Events:
          ProxyApiRoot:
            Type: Api
            Properties:
              RestApiId: !Ref ServiceApi
              Path: /api/
              Method: ANY
          ProxyApiGreedy:
            Type: Api
            Properties:
              RestApiId: !Ref ServiceApi
              Path: /api/{proxy+}
              Method: ANY
              
 
Outputs:
  LambdaServiceApiLogs:
    Description: "Api Lambda Logs"
    Value: !Sub "https://console.aws.amazon.com/cloudwatch/home?region=${AWS::Region}#logStream:group=/aws/lambda/${ServiceApiFunction};streamFilter=typeLogStreamPrefix"

